<div>
    <div id="embed-api-auth-container"></div>
    
    <div class="row">
        <div class="col-md-8 col-sm-6">
            <div id="chart-3-container"></div>
        </div>
        <div class="col-md-4 col-sm-6">
            <h3>Calls</h3>
            <p>How this data should be accessed?</p>
            <p>Should we access the database and read data from it, or should we upload excel file and read from it? If so, should this file be saved to disk or should the data be writen to our new database?</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-8 col-sm-6">
            <div id="chart-1-container"></div>
        </div>
        <div class="col-md-4 col-sm-6">
            <div id="chart-2-container"></div>
        </div>
    </div>
    <div class="row">
        <div id="view-selector-1-container"
             style="width:100%"></div>
    </div>
    <script>
    (function (w, d, s, g, js, fjs) {
        g = w.gapi || (w.gapi = {}); g.analytics = { q: [], ready: function (cb) { this.q.push(cb) } };
        js = d.createElement(s); fjs = d.getElementsByTagName(s)[0];
        js.src = 'https://apis.google.com/js/platform.js';
        fjs.parentNode.insertBefore(js, fjs); js.onload = function () { g.load('analytics') };
    }(window, document, 'script'));
    </script>

    <script>
        gapi.analytics.ready(function () {

            // Step 3: Authorize the user.

            var CLIENT_ID = '323154883206-d7mk492ip9fib69js2aahgvsv7n1bpna.apps.googleusercontent.com';

            gapi.analytics.auth.authorize({
                container: 'embed-api-auth-container',
                clientid: CLIENT_ID,
            });

            // Step 4: Create the view selector.

            var viewSelector1 = new gapi.analytics.ViewSelector({
                container: 'view-selector-1-container'
            });

            // Render view selectors to the page.
            viewSelector1.execute();

            /**
             * Create the first DataChart for top countries over the past 30 days.
             * It will be rendered inside an element with the id "chart-1-container".
             */
            var dataChart1 = new gapi.analytics.googleCharts.DataChart({
                query: {
                    metrics: 'ga:sessions',
                    dimensions: 'ga:country',
                    'start-date': '30daysAgo',
                    'end-date': 'yesterday',
                    'max-results': 24,
                    sort: '-ga:sessions'
                },
                chart: {
                    container: 'chart-1-container',
                    type: 'GEO',
                    options: {
                        width: '100%'
                    }
                }
            });


            /**
             * Create the second DataChart for top countries over the past 30 days.
             * It will be rendered inside an element with the id "chart-2-container".
             */
            var dataChart2 = new gapi.analytics.googleCharts.DataChart({
                query: {
                    metrics: 'ga:sessions',
                    dimensions: 'ga:country',
                    'start-date': '30daysAgo',
                    'end-date': 'yesterday',
                    'max-results': 24,
                    sort: '-ga:sessions'
                },
                chart: {
                    container: 'chart-2-container',
                    type: 'PIE',
                    options: {
                        width: '100%'
                    }
                }
            });
            dataChart2.execute();

            var dataChart3 = new gapi.analytics.googleCharts.DataChart({
                query: {
                    metrics: 'ga:sessions,ga:pageviews',
                    dimensions: 'ga:date',
                    'start-date': '30daysAgo',
                    'end-date': 'yesterday',
                    'max-results': 24,
                },
                chart: {
                    container: 'chart-3-container',
                    type: 'LINE',
                    options: {
                        width: '100%'
                    }
                }
            });

            /**
              * Update the first dataChart when the first view selecter is changed.
              */
            viewSelector1.on('change', function (ids) {
                dataChart1.set({ query: { ids: ids } }).execute();
                dataChart2.set({ query: { ids: ids } }).execute();
                dataChart3.set({ query: { ids: ids } }).execute();
            });
        });
        </script>
</div>